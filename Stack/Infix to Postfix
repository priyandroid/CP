int precedence(char ch){
        
        if(ch=='^')return 3;
        if(ch=='*'||ch=='/')return 2;
        if(ch=='+'||ch=='-')return 1;
    }
    //Function to convert an infix expression to a postfix expression.
    string infixToPostfix(string s)
    {
        // Your code here
        string res;
        stack<char> st;
        for(int i=0;i<s.size();i++){
            if(isalpha(s[i]))res+=s[i];
            else{
                
            if(st.empty()||s[i]=='(')
            st.push(s[i]);
            else if(s[i]==')'){
            while(st.top()!='('){
                res+=st.top();
                st.pop();
            }
                st.pop();
            }
            else{
            while(!st.empty() && st.top()!='(' && 
            precedence(s[i])<=precedence(st.top())){
           res+=st.top();
           st.pop();
            }
            st.push(s[i]);
            }
            }
        }
        while(!st.empty()){
            res+=st.top();
            st.pop();
        }
        return res;
    }
