# include<bits/stdc++.h>
using namespace std;

class Graph{
    
    public:
    map<int,bool> visited;
    map<int,vector<int>> adj;
    void addEdge(int u,int v);
    bool BFSUtil(int v,int sec);
};
void Graph::addEdge(int u,int v){
    adj[u].push_back(v);
}
bool Graph:: BFSUtil(int v,int sec){
    queue<int> q;
    q.push(v);
    visited[v]=true;
    while(!q.empty()){
        int x=q.front();
        q.pop();
        cout<<x<<" ";
       
        
        for(auto it=adj[x].begin();it!=adj[x].end();it++){
             if(*it==sec){cout<<*it;return true;}
           if(!visited[*it]){
               visited[*it]=true;
               q.push(*it);
           }
           
        }
        
    }
    return false;
}

int main(){
    Graph g;
    g.addEdge(0, 1);
    g.addEdge(0, 2);
    g.addEdge(1, 2);
    g.addEdge(2, 0);
    g.addEdge(2, 3);
    g.addEdge(3, 3);
    if(g.BFSUtil(2,3))
    cout<<"Path exists";
    else cout<<"Path does not exist";
}
