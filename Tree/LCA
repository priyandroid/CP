
#include <bits/stdc++.h>
using namespace std;

struct Node{
    int val;
    Node* right,*left,*next;
    Node(int val){
        this->val=val;
        left=right=next=NULL;
    }
};


Node*insert (Node* root,int val){
   if(root==NULL)
   root= new Node(val);
   
   else{
       if(root->val<=val)
       root->right=insert(root->right,val);
       else
       root->left= insert(root->left,val);
   }
    return root;
}

Node* LCA(Node* root,int key1,int key2){
    
    if(root==NULL)
    return NULL;
    
   if(root->val==key1 || root->val==key2)
      return root;
   
   Node* leftlca= LCA(root->left,key1,key2);
   Node* rightlca=LCA(root->right,key1,key2);
   
    if(leftlca && rightlca)
    return root;
    
    if(!leftlca)
    return rightlca;
    else return leftlca;
    
}



int main()
{
    Node * root = new Node(1);
    root->left = new Node(2);
    root->right = new Node(3);
    root->left->left = new Node(4);
    root->left->right = new Node(5);
    root->right->left = new Node(6);
    root->right->right = new Node(7);
    Node *lca =  LCA(root, 4, 5);
    if (lca != NULL)
       cout << "LCA(4, 5) = " << lca->val;
    else
       cout << "Keys are not present ";
 
    lca =  LCA(root, 4, 10);
    if (lca != NULL)
       cout << "\nLCA(4, 10) = " << lca->val;
    else
       cout << "\nKeys are not present ";
    return 0; 
   
}
