

#include <bits/stdc++.h>
using namespace std;

struct Node{
    int val;
    Node* right,*left;
    Node(int val){
        this->val=val;
        left=right=NULL;
    }
};

bool isomorphicTrees(Node* root1,Node* root2){
    
    if(root1==NULL && root2==NULL)
    return true;
    if(root1==NULL ||root2 ==NULL)
    return false;
    if(root1->val!=root2->val)
    return false;
    
    return((isomorphicTrees(root1->left,root2->left)&& isomorphicTrees(root1->right,root2->right)) || 
    (isomorphicTrees(root1->left,root2->right)&& isomorphicTrees(root1->right,root2->left)));
}

int main()
{
    Node *n1 = new Node(1);
    n1->left        = new Node(2);
    n1->right       = new Node(3);
    n1->left->left  = new Node(4);
    n1->left->right = new Node(5);
    n1->right->left  = new Node(6);
    n1->left->right->left = new Node(7);
    n1->left->right->right = new Node(8);
  
    Node *n2 = new Node(1);
    n2->left         = new Node(3);
    n2->right        = new Node(2);
    n2->right->left   = new Node(4);
    n2->right->right   = new Node(5);
    n2->left->right   = new Node(6);
    n2->right->right->left = new Node(8);
    n2->right->right->right = new Node(7);
        if(isomorphicTrees(n1,n2))
        cout<<"Isomorphic Trees !!";
        else cout<<"Trees are not Isomorphic";
    return 0;
}
