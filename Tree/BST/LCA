
#include <bits/stdc++.h>
using namespace std;

struct Node{
    int val;
    Node* right,*left,*next;
    Node(int val){
        this->val=val;
        left=right=next=NULL;
    }
};


Node*insert (Node* root,int val){
   if(root==NULL)
   root= new Node(val);
   
   else{
       if(root->val<=val)
       root->right=insert(root->right,val);
       else
       root->left= insert(root->left,val);
   }
    return root;
}

Node* LCA(Node* root,int key1,int key2){
    
    if(root==NULL)
    return NULL;
    
    
    if(root->val>key2&& root->val>key1)
    return LCA(root->left,key1,key2);
    
    else if(root->val<key1 && root->val <key2)
    return LCA(root->right,key1,key2);
    
    else
    return root;
    
    
}
int main()
{
    Node *root = new Node(20); 
    root->left = new Node(8); 
    root->right = new Node(22); 
    root->left->left = new Node(4); 
    root->left->right = new Node(12); 
    root->left->right->left = new Node(10); 
    root->left->right->right = new Node(14); 
  
    int n1 = 10, n2 = 14; 
    Node *t = LCA(root, n1, n2); 
    cout << "LCA of " << n1 << " and " << n2 << " is " << t->val<<endl; 
  
    n1 = 14, n2 = 8; 
    t = LCA(root, n1, n2); 
    cout<<"LCA of " << n1 << " and " << n2 << " is " << t->val << endl; 
  
    n1 = 10, n2 = 22; 
    t = LCA(root, n1, n2); 
    cout << "LCA of " << n1 << " and " << n2 << " is " << t->val << endl; 
    return 0; 
   
}
