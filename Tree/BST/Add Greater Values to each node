#include <bits/stdc++.h>
using namespace std;

struct Node{
    int val;
    Node* left, *right;
    Node(int val){
        this->val=val;
        left=right=NULL;
    }
};

Node*insert (Node* root,int val){
   if(root==NULL)
   root= new Node(val);
   
   else{
       if(root->val<=val)
       root->right=insert(root->right,val);
       else
       root->left= insert(root->left,val);
   }
    return root;
}

void traverseBST(Node* root){
    if(root==NULL)
    return;
    
    traverseBST(root->left);
    cout<<root->val<<" ";
    traverseBST(root->right);
}

void modifyBST(Node*root,int& sum){
    
    if(root==NULL)
    return;
    
    modifyBST(root->right,sum);
    
    sum+=root->val;
    root->val=sum;
    
   
    modifyBST(root->left,sum);
    
}


int main(){
    int sum=0;
    Node* root = NULL;
    root = insert(root, 50);
    root = insert(root, 30);
    root = insert(root, 20);
    root = insert(root, 40);
    root = insert(root, 70);
    root = insert(root, 60);
    root = insert(root, 80);
    
traverseBST(root);
cout<<"\n";
modifyBST(root,sum);
traverseBST(root);

    return 0;
}
