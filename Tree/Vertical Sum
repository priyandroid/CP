
#include <bits/stdc++.h>
using namespace std;

struct Node{
    int val,hd;
    Node* left,*right;
    Node(int val){
        this->val=val;
        hd=0;
        left=right=NULL;
    }
};
int height(Node* root){
    if(root==NULL)
    return 0;
    return 1+max(height(root->left),height(root->right));
}

void verticalsum(Node* root){
    map<int,int> sum;
    queue<Node*> q;
    q.push(root);
    while(!q.empty()){
        Node* p=q.front();
        q.pop();
         sum[p->hd]+=p->val;
        if(p->left){
            p->left->hd=p->hd-1;
            q.push(p->left);
           
        }
        
        if(p->right){
            p->right->hd=p->hd+1;
            q.push(p->right);
            
        }
        
}

for(auto it:sum){
    cout<<"Distance of vertical line"<<it.first<<" : "<< it.second<<"\n ";
}
}
int main()
{
    Node* root = new Node(1);
    root->left = new Node(2);
    root->right = new Node(3);
    root->left->left = new Node(7);
    root->left->right = new Node(6);
    root->right->left = new Node(5);
    root->right->right = new Node(4);
    verticalsum(root);
    
    return 0;
}
