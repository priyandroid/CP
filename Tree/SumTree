#include <bits/stdc++.h>
using namespace std;

struct Node{
    int val;
    Node* right,*left;
    Node(int val){
        this->val=val;
        left=right=NULL;
    }
};

int sum(Node* root){
   if(root==NULL)
   return 0;
  
  
  return sum(root->left) +root->val + sum(root->right);
   
}


bool sumTree(Node* root){
    
    if(root==NULL ||(root->left==NULL && root->right==NULL) )
     return true;
    
    int leftsum,rightsum;
    leftsum=sum(root->left);
    rightsum=sum(root->right);
    
  if (sumTree(root->left) && sumTree(root->right) && (root->val==leftsum+rightsum))
     return true;
  
    return false;
}

int main()
{
    Node *n1 = new Node(26);
    n1->left        = new Node(10);
    n1->right       = new Node(3);
    n1->left->left  = new Node(4);
    n1->left->right = new Node(6);
    n1->right->left  = new Node(3);
    if(sumTree(n1))
    cout<<"It is sum tree\n";
    else cout<<"Not a sum Tree";
    return 0;
}
