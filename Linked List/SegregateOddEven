#include<bits/stdc++.h>
using namespace std;
struct Node{
  int val;
  Node* next;
  Node(int val){
    this->val=val;
    next=NULL;
  } 
};
 

struct LinkedList{
  Node*head;
  LinkedList(){
    head=NULL;
  }
   void insert(int val){
     Node* curr= new Node(val);
     if(head==NULL)
      head=curr;
      else{
        Node* tp=head;
        while(tp->next!=NULL){
          tp=tp->next;
        }
        tp->next= curr;
      }
    
   }
   
   

Node* SegregateOddEven(Node* head){
 
 Node*end=head;
  int cnt=0,len=0;

  while(end->next!=NULL){
    if(end->val &1)cnt++;
   end=end->next;
   len++;
 }
  if(cnt==len || cnt==0)return head;
  
  Node* curr_end=end,*prev,*curr=head;
  while(curr!= end ){
  
    if(curr->val & 1 ){
       
        if(curr==head){
         head=curr->next;
       }
       else  prev->next= curr->next;
     
     curr_end->next = curr;
     curr= curr->next;
     curr_end=curr_end->next;
     curr_end->next=NULL;
     
  }
  else{
   prev=curr;
   curr=curr->next;
  }
   
 }

 if(end->val & 1){
   
   prev->next=end->next;
   curr_end->next=end;
   curr_end=curr_end->next;
   curr_end->next=NULL;
 }
 return head;

}
   void print(){

     Node* curr=head;
     while(curr!=NULL){
       cout<<curr->val<<" ";
       curr=curr->next;
     }
   }
};

int main(){
  
LinkedList ll;
ll.insert(1);
ll.insert(2);
ll.insert(3);
ll.insert(4);
ll.insert(5);
ll.insert(6);
ll.insert(7);
ll.insert(7);
ll.insert(8);
ll.insert(1);
cout<<"Original list : \n";
ll.print();
ll.head=ll.SegregateOddEven(ll.head);

cout<<"\n Segregated List : \n";
ll.print();
return 0;
}
