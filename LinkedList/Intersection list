#include<bits/stdc++.h>
using namespace std;
struct Node{
  int val;
  Node* next;
  Node(int val){
    this->val=val;
    next=NULL;
  } 
};
 


  Node*  insert(Node* head,int val){
     Node* curr= new Node(val);
     if(head==NULL){
      head=curr;
     }
      else{
        Node* tp=head;
        while(tp->next!=NULL){
          tp=tp->next;
        }
        tp->next= curr;
      }
    return head;
   }
   




 void print(Node* p){
    if(p==NULL)
    {cout<<"No element in list\n";
    return;
    }
     Node* curr=p;
     while(curr!=NULL){
       cout<<curr->val<<" ";
       curr=curr->next;
     }
     cout<<"\n";
   }
   
Node* intersection(Node* head1,Node* head2){
  Node *head3=NULL;
  while(head1!=NULL && head2!=NULL){
      if(head1->val==head2->val){
      head3=insert(head3,head1->val);
      head1=head1->next;
      head2=head2->next;
      }
      else if(head1->val> head2->val)
        head2=head2->next;
        else head1=head1->next;
  }
  return head3;
}

   
int main(){
Node*head1=NULL, *head3=NULL;
head1=insert(head1,1);
head1=insert(head1,2);
head1=insert(head1,3);
head1=insert(head1,4);
head1=insert(head1,5);
head1=insert(head1,6);
head1=insert(head1,7);
Node* head2=NULL;
head2=insert(head2,2);
head2=insert(head2,4);
head2= insert(head2,6);
head2=insert(head2,8);
cout<<"List1 : \n";

print(head1);
cout<<"List2 : \n";

print(head2);
head3=intersection(head1,head2);
cout<<"Intersection of list1 and list 2 : ";
print(head3);

}

